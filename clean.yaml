---
- name: Get instance info
  ec2_instance_info:
    filters:
      "tag:Name": "{{ AWS_NAME_PREFIX}}_VM"
      instance-state-name: [ "running" ] 
  register: vm_info

- name: Get vpc info
  ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ AWS_NAME_PREFIX}}_VPC"
  register: vpc_info

- name: Get subnet info
  ec2_vpc_subnet_info:
    filters:
      "tag:Name": "{{ AWS_NAME_PREFIX}}_SUBNET"
  register: subnet_info

- name: Get internet gateway info
  ec2_vpc_igw_info:
    filters:
      "tag:Name": "{{ AWS_NAME_PREFIX}}_IGW"
  register: igw_info

- name: Get routing table info
  ec2_vpc_route_table_info:
    filters:
      "tag:Name": "{{ AWS_NAME_PREFIX}}_RTBL"
  register: rtbl_info

- name: Get security group info
  ec2_group_info:
    filters:
      group-name: "{{ AWS_NAME_PREFIX}}_SECGRP"
  register: secgrp_info

- name: Release Elastic ip
  when: vm_info.instances
  community.aws.ec2_eip:
    state: absent
    device_id: "{{ vm_info.instances[0].instance_id }}"
    ip: "{{ vm_info.instances[0].public_ip_address }}"
    release_on_disassociation : yes

- name: Terminate EC2 instance
  when: vm_info.instances
  ec2:
    instance_id: "{{ vm_info.instances[0].instance_id }}"
    state: absent

- name: Pause for 45 seconds to allow EC2 instance to be removed
  pause:
    seconds: 45

- name: Remove subnet
  when: subnet_info.subnets
  ec2_vpc_subnet:
    state: absent
    vpc_id: "{{ subnet_info.subnets[0].vpc_id }}"
    cidr: "{{ subnet_info.subnets[0].cidr_block }}"

- name: Remove internet gateway
  when: igw_info.internet_gateways
  ec2_vpc_igw:
    state: absent
    vpc_id: "{{ igw_info.internet_gateways[0].attachments[0].vpc_id }}"

- name: Remove routing table
  when: rtbl_info.route_tables
  ec2_vpc_route_table:
    state: absent
    route_table_id: "{{ rtbl_info.route_tables[0].id }}"
    vpc_id: "{{ rtbl_info.route_tables[0].vpc_id }}"
    lookup: id

- name: Delete security group
  when: secgrp_info.security_groups
  ec2_group:
    group_id: "{{ secgrp_info.security_groups[0].group_id }}"
    state: absent

- name: Pause for 10 seconds to allow all resources to be removed
  pause:
    seconds: 10

- name: Remove VPC
  when: vpc_info.vpcs
  ec2_vpc_net:
    state: absent
    cidr_block: 10.42.0.0/16 
    name: "{{ AWS_NAME_PREFIX }}_VPC"




